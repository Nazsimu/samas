# Define the path to the file
$filePath = "C:\path\to\your\file.txt"

# Define the specific text you're searching for
$searchText = "specific text"
$smartNvmeText = "SMART_NVME"

# Initialize a flag to track when to start reading and a counter to count lines
$reading = $false
$diskCount = 0  # Counter for lines after the specific text

# Initialize a list to store SMART_NVME lines
$smartNvmeLines = @()

# Use Get-Content to read the file line by line
Get-Content -Path $filePath | ForEach-Object {
    # Check if the line contains the specific text
    if ($_ -match $searchText) {
        # Set the flag to start reading and reset the counter
        $reading = $true
        $diskCount = 0  # Reset count after finding specific text
        Write-Host "Found specific text: $_"
    }

    # If the reading flag is set, process the lines
    elseif ($reading) {
        if ($_ -eq "") {
            # Stop reading when an empty line is encountered
            Write-Host "Stopping at empty line."
            $reading = $false
            
            # Print the disk count before moving on to SMART_NVME lines
            if ($diskCount -ne 0) {
                Write-Host "Total disks read after specific text: $diskCount"
            }

            # Continue reading the file to find SMART_NVME lines
            return  # Skip to the next iteration to continue processing
        } else {
            # Increment the counter for each line found after specific text
            $diskCount++
            Write-Host "Reading line: $_"

            # Check if the line contains SMART_NVME and store it
            if ($_ -match $smartNvmeText) {
                $smartNvmeLines += $_
            }
        }
    }
}

# After hitting an empty line, continue reading for SMART_NVME lines
if ($diskCount -ne 0) {
    Write-Host "Continuing to find SMART_NVME lines..."

    # Re-read the file from the beginning to find SMART_NVME lines
    Get-Content -Path $filePath | ForEach-Object {
        if ($_ -match $smartNvmeText) {
            $smartNvmeLines += $_
        }
    }

    # Print SMART_NVME lines based on disk count
    if ($diskCount -eq 1) {
        if ($smartNvmeLines.Count -eq 1) {
            Write-Host "SMART_NVME line for one disk: $($smartNvmeLines[0])"
        } else {
            Write-Host "No SMART_NVME line found for one disk."
        }
    } elseif ($diskCount -gt 1) {
        Write-Host "SMART_NVME lines for $diskCount disks:"
        $smartNvmeLines | ForEach-Object {
            Write-Host $_
        }
    }
}
